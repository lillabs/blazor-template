@page "/auth/settings"
@inject ILogger<Settings> Logger
@attribute [Authorize]

<MudTabs Position="Position.Left" Border="true" Outlined="true" Elevation="5" Rounded="true" Style="width: 100%">
    <MudTabPanel Text="Account">
        <MudForm @ref="_form">
            <AccountInputComponent User="UserService.CurrentUser" SaveClick="Save" IsLoading="_isLoading" @bind-ErrorMessage="_error"/>
        </MudForm>
    </MudTabPanel>
</MudTabs>

@code {
    MudForm _form = null!;
    bool _isLoading;
    string? _error;

    async Task Save() {
        
        try {
            if (!await _form.IsFormValidAsync()) return;
            _isLoading = true;
            await UserRepository.UpdateInfoAsync(UserService.CurrentUser!, Cts.Token);
        }
        catch (DuplicateEmailException) {
            _error = "Invalid email!";
        }
        catch (TaskCanceledException) {
            Logger.LogInformation("Settings user-update canceled");
        }
        catch (OperationCanceledException) {
            Logger.LogInformation("Settings user-update canceled");
        }
        catch (Exception e) {
            _error = "An error occurred!";
            Logger.LogError(e, "Settings user-update failed");
        }
        finally {
            _isLoading = false;
            StateHasChanged();
        }
    }

}